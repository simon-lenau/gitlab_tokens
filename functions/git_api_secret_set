# ========================== > git_api_secret_set < ========================== #

# ┌┌────────────────────────────────────────────────────────────────────────┐┐ #
# ││ `git_api_secret_set`                                                   ││ #
# ││                                                                        ││ #
# ││ Set secret for gitlab API access                                       ││ #
# ││                                                                        ││ #
# ││ Input:                                                                 ││ #
# ││ $1 : api_secret (string): The credential (personal access token)       ││ #
# ││                                                                        ││ #
# ││ Output:                                                                ││ #
# ││ Return code 0 if the secret is valid, 1 otherwise                      ││ #
# ││                                                                        ││ #
# ││ Usage:                                                                 ││ #
# ││ git_api_secret_set <api_credential>                                    ││ #
# ││                                                                        ││ #
# ││ Examples:                                                              ││ #
# ││ git_api_secret_set "glpat-aG2fJfixfGub6ULt2L5_"                        ││ #
# └└────────────────────────────────────────────────────────────────────────┘┘ #
function git_api_secret_set {
    init_doc
    init_desc \
        "Set secret for acessing gitlab API"
    init_arg "str" "api_secret" "The API secret" "glpat-aG2fJfixfGub6ULt2L5_"
    init_arg "str" "url" "The url to set the api secret for" "$(git config --get remote.origin.url)"

    need_help $@ && return $?

    eval "$(parse_arguments "$@")"

    if [[ "${api_secret}" == "glpat-aG2fJfixfGub6ULt2L5_" ||
        "${api_secret}" == "" ]]; then
        local api_secret="$(read_non_blocking "$@")"
    fi

    export __gitlab_api_secret__="${api_secret}"

    # Check if the credential works
    local output="$(
        git_api \
            --curl_body="https://$(git_repo_info --type host --url "${url}")/api/v${gitlab_api_version}/version"
    )"

    output="$(
        echo "${output}" |
            jq '.version'
    )"

    if [[ "${output}" =~ "Unauthorized" ]]; then
        err "API Secret is invalid!"
        return 1
    fi

    if [[ "$output" == "null" ]]; then
        err "No response from API!"
        return 1
    fi
    return 0
}
# ────────────────────────────────── <end> ─────────────────────────────────── #
